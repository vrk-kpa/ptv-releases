<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <VersionPrefix>2.7.0</VersionPrefix>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <GeneratedItemPatterns>wwwroot/js/build/**;wwwroot/css/**;wwwroot/images/**;wwwroot/lib/**;wwwroot/localization/**;wwwroot/font/**;wwwroot/favicon.ico</GeneratedItemPatterns>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
  </PropertyGroup>
  <ItemGroup>
    <Compile Remove="wwwroot\**" />
    <Content Remove="wwwroot\**" />
    <EmbeddedResource Remove="wwwroot\**" />
    <None Remove="wwwroot\**" />
    <None Update="OldApp\node_modules">
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </None>
    <Content Update="EnvironmentsSettings\**\*">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </Content>
    <None Remove="aws-logger-errors.txt" />
  </ItemGroup>
  <ItemGroup>
	<PackageReference Include="AWS.Logger.NLog" Version="3.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv" Version="3.1.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.1" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="3.1.1.2" />
    <PackageReference Include="NLog.Web.AspNetCore" Version="4.9.0" />
    <PackageReference Include="AspNet.Security.OAuth.Introspection" Version="2.0.0" />
    <PackageReference Include="AspNet.Security.OAuth.Validation" Version="2.0.0" />
    <PackageReference Include="AspNet.Security.OpenIdConnect.Primitives" Version="2.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" Version="3.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.5" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="3.1.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="3.1.1" />
    <PackageReference Include="Microsoft.IdentityModel.Protocols.OpenIdConnect" Version="2.1.4" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="5.6.0" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="Webpack" Version="4.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\PTV.Domain.Logic\PTV.Domain.Logic.csproj" />
    <ProjectReference Include="..\PTV.Domain.Model\PTV.Domain.Model.csproj" />
    <ProjectReference Include="..\PTV.Framework\PTV.Framework.csproj" />
    <ProjectReference Include="..\PTV.Application.Framework\PTV.Application.Framework.csproj" />
    <ProjectReference Include="..\PTV.LocalAuthentication\PTV.LocalAuthentication.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <Target Name="PrepublishScript" BeforeTargets="PrepareForPublish">
    <Exec Condition="'$(ASPNETCORE_ENVIRONMENT)' == 'Development'" Command="cd OldApp&#xD;&#xA;yarn run prod:sourcemap&#xD;&#xA;cd .." />
    <Exec Condition="'$(ASPNETCORE_ENVIRONMENT)' == ''" Command="cd OldApp&#xD;&#xA;yarn run prod&#xD;&#xA;cd .." />
    <ItemGroup>
      <_GeneratedFiles Include="$(GeneratedItemPatterns)" />
      <ContentWithTargetPath Include="@(_GeneratedFiles->'%(FullPath)')" RelativePath="%(_GeneratedFiles.Identity)" TargetPath="%(_GeneratedFiles.Identity)" CopyToPublishDirectory="PreserveNewest" />
    </ItemGroup>
  </Target>

</Project>
