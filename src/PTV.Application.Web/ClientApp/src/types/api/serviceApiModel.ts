import { AreaInformationModel } from 'types/areaTypes';
import { OntologyTerm } from 'types/classificationItemsTypes';
import * as enumTypes from 'types/enumTypes';
import { ServiceVoucherModel } from 'types/forms/serviceFormTypes';
import { LanguageVersionType } from 'types/languageVersionTypes';
import { LinkModel } from 'types/link';
import { TranslationAvailabilityType } from 'types/miscellaneousTypes';
import { OrganizationModel } from 'types/organizationTypes';
import { ChargeApiModel } from './chargeApiModel';
import { GdApiModel } from './gdApiModel';
import { OtherVersionApiType } from './otherVersionApiType';
import { ConnectableChannel } from './serviceChannelModel';
import { LastTranslationApiType } from './translationApiTypes';

export type ServiceApiLanguageModel = {
  language: enumTypes.Language;
  status: enumTypes.PublishingStatus;
  name: string;
  hasAlternativeName: boolean;
  alternativeName: string | null | undefined;
  summary: string;
  description: string | null | undefined;
  userInstructions: string | null | undefined;
  conditions: string | null | undefined;
  deadline: string | null | undefined;
  processingTime: string | null | undefined;
  periodOfValidity: string | null | undefined;
  laws: LinkModel[];
  charge: ChargeApiModel;
  voucher: ServiceVoucherModel;
  keywords: string[];
  purchaseProducerNames: string[];
  otherProducerNames: string[];
  modified: string;
  modifiedBy: string;
  scheduledPublish: string | null | undefined;
  scheduledArchive: string | null | undefined;
  translationAvailability: TranslationAvailabilityType | null | undefined;
};

export type ServiceApiModel = {
  id: string | null | undefined;
  status: enumTypes.PublishingStatus;
  targetGroups: string[];
  lifeEvents: string[];
  industrialClasses: string[];
  serviceClasses: string[];
  ontologyTerms: OntologyTerm[];
  fundingType: enumTypes.FundingType;
  serviceType: enumTypes.ServiceType;
  chargeType: enumTypes.ChargeType | null;
  languageVersions: LanguageVersionType<ServiceApiLanguageModel>;
  languages: string[];
  areaInformation: AreaInformationModel;
  responsibleOrganization: OrganizationModel | null | undefined;
  otherResponsibleOrganizations: OrganizationModel[];
  unificRootId: string | null | undefined;
  generalDescription: GdApiModel | null | undefined;
  selfProducers: OrganizationModel[];
  purchaseProducers: OrganizationModel[];
  otherProducers: OrganizationModel[];
  connectedChannels: ConnectableChannel[];
  voucherType: enumTypes.VoucherType;
  version: string;
  otherPublishedVersion: OtherVersionApiType | null | undefined;
  otherModifiedVersion: OtherVersionApiType | null | undefined;
  lastTranslations: LastTranslationApiType[];
};
