<#@ include file="$(SolutionDir)TemplateHelper.ttinclude"#>
<#@ include file="$(SolutionDir)TemplateFileManagerV2.1.ttinclude"#>
<#CodeGenerationTools code = new CodeGenerationTools(this);
string namespaceName = code.VsNamespaceSuggestion();
var manager = TemplateFileManager.Create(this);
var inputFiles = PTV_VSHelper.GetInputFiles(@"PTV.Database.Model\Models");
var destinationFolder = PTV_VSHelper.GetProjectDirectoryOfCurrentFile() + @"\Repositories";

foreach (var file in inputFiles)
{
	manager.StartNewFile(file + "Repository.cs", string.Empty, destinationFolder);
#>/**
 * The MIT License
 * Copyright (c) 2016 Population Register Centre (VRK)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
 <#WriteHeader("PTV.Database.Model.Models", "PTV.Database.DataAccess.Interfaces.Repositories", "PTV.Database.DataAccess.ApplicationDbContext","PTV.Framework");
BeginNamespace(namespaceName, code);#>
/// <summary>
/// Strongly typed repository interface for extending basic generic repository.
/// </summary>
[RegisterService(typeof(I<#=code.Escape(file)#>Repository), RegisterType.Transient)]
[RegisterService(typeof(IRepository<<#=code.Escape(file)#>>), RegisterType.Transient)]
internal partial class <#=code.Escape(file)#>Repository : Repository<<#=code.Escape(file)#>>, I<#=code.Escape(file)#>Repository
{
	#region Ctor
	/// <summary>
    /// Default constructor for base repository.
    /// </summary>
	/// <exception cref="ArgumentNullException">When context is null.</exception>
    /// <param name="context">Data context for repository instance.</param>
	/// <param name="prefilteringManager">Prefiltering manager for query filters.</param>
	public <#=code.Escape(file)#>Repository(PtvDbContext context, IPrefilteringManager prefilteringManager)
		: base(context, prefilteringManager)
	{
	}

	#endregion Ctor
}
<#
EndNamespace(namespaceName);
}
manager.Process();
#>