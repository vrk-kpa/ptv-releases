<#@ include file="T4Helpers/NamespaceHelper.ttinclude" #>
<#CodeGenerationTools code = new CodeGenerationTools();
var namespaceName = code.GetRepositoryNamespace();
var solutionDirectory = code.GetSolutionDirectory("PTV.sln");
var modelsDirectory = System.IO.Path.Combine(solutionDirectory, "src", "PTV.Database.Model", "Views");
var inputFiles = code.GetInputFileNames(modelsDirectory);
var destinationFolder = System.IO.Path.Combine(solutionDirectory, "src", "PTV.Database.DataAccess.Interfaces", "Repositories");
var manager = TemplateFileManager.Create(this, destinationFolder);

foreach (var file in inputFiles)
{
	manager.StartNewFile("I" + file + "Repository.cs", string.Empty, destinationFolder);
#>/**
 * The MIT License
 * Copyright (c) 2020 Finnish Digital Agency (DVV)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
 <#
	WriteHeader("PTV.Database.Model.Views");
BeginNamespace(namespaceName, code);#>
/// <summary>
/// Strongly typed repository interface for extending basic generic repository.
/// </summary>
internal partial interface I<#=code.Escape(file)#>Repository : IVRepository<<#=code.Escape(file)#>>
{
}
<#
EndNamespace(namespaceName);
}
manager.Process();
#>
