@using PTV.IdentityUserManager.Models
@model PTV.IdentityUserManager.Models.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change password";
}

<h2>@ViewData["Title"].</h2>
<div class="panel-body col-sm-6">
    <form asp-controller="Account" asp-action="ChangePassword" method="post" class="form-horizontal" role="form">
        <h4>Change your password.</h4>
        <hr />
        <div asp-validation-summary="All" class="text-danger"></div>
        <input asp-for="Code" type="hidden" />
        <div class="form-group row">
            <label asp-for="OldPassword" class="col-md-5 control-label"></label>
            <div class="col-md-7">
                <input asp-for="OldPassword" class="form-control" />
                <span asp-validation-for="OldPassword" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <label asp-for="Password" class="col-md-5 control-label"></label>
            <div class="col-md-7">
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <label asp-for="ConfirmPassword" class="col-md-5 control-label"></label>
            <div class="col-md-7">
                <input asp-for="ConfirmPassword" class="form-control" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-default">Change</button>
            </div>
        </div>
    </form>
</div>
    @section Scripts {
        @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    }
