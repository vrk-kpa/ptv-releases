<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn">
      <!-- internalLogToConsole="true"> -->

    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
        <add assembly="NLog.AWS.Logger" />
    </extensions>
        
   <!-- define various log targets -->
    <targets>

        <target name="jsonJobLoggerAWS" type="AWSTarget" logGroup="ptv-taskscheduler-quartz" region="eu-west-1" Profile="aws-logs">
             <layout xsi:type="JsonLayout">
                 <attribute name="logger" layout="${logger}" />
                 <attribute name="operationId" layout="${operation-id}"/>
                 <attribute name="time" layout="${longdate}"/>
                 <attribute name="level" layout="${level:upperCase=true}"/>
                 <attribute name="executionType" layout="${execution-type}"/>
                 <attribute name="jobType" layout="${job-type}"/>
                 <attribute name="jobStatus" layout="${job-status}"/>
                 <attribute name="isForced" layout="${event-properties:item=IsForced}"/>
                 <attribute name="message" layout="${message}" />
                 <attribute name="exception" layout="${exception:format=toString,Data}"/>
                 <attribute name="operation" layout="${event-context:item=Operation}"/>
                 <attribute name="table" layout="${event-context:item=Table}"/>
                 <attribute name="rowid" layout="${event-context:item=RowId}"/>
                 <attribute name="user" layout="${event-context:item=User}"/>
             </layout>
        </target>

        <target name="jsonJobLoggerConsole" xsi:type="Console">
            <layout xsi:type="JsonLayout">
                <attribute name="logger" layout="${logger}" />
                <attribute name="operationId" layout="${operation-id}"/>
                <attribute name="time" layout="${longdate}"/>
                <attribute name="level" layout="${level:upperCase=true}"/>
                <attribute name="executionType" layout="${execution-type}"/>
                <attribute name="jobType" layout="${job-type}"/>
                <attribute name="jobStatus" layout="${job-status}"/>
                <attribute name="isForced" layout="${event-properties:item=IsForced}"/>
                <attribute name="message" layout="${message}" />
                <attribute name="exception" layout="${exception:format=toString,Data}"/>
                <attribute name="operation" layout="${event-context:item=Operation}"/>
                <attribute name="table" layout="${event-context:item=Table}"/>
                <attribute name="rowid" layout="${event-context:item=RowId}"/>
                <attribute name="user" layout="${event-context:item=User}"/>
            </layout>
        </target>

        <target xsi:type="Null" name="blackhole" />
    </targets>

    <rules>
        <!--All logs, including from Microsoft-->
        <!--<logger name="*" minlevel="Trace" writeTo="allfile" />-->

        <!--Skip Microsoft logs and so log only own logs-->
        <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
        <!--Skip Npgsql logs -->
        <logger name="Npgsql.*" minlevel="Trace" writeTo="blackhole" final="true" />
        <!--Skip Webpack logs-->
        <logger name="webpack*" minlevel="Trace" writeTo="blackhole" final="true" />
        <logger name="Webpack*" minlevel="Trace" writeTo="blackhole" final="true" />
        <!--Skip Quartz logs-->
        <logger name="Quartz.SQL" levels="Debug,Info" writeTo="blackhole" final="true" />
        <logger name="Quartz.Util*" levels="Debug,Info" writeTo="blackhole" final="true" />
        <logger name="Quartz.Simpl*" levels="Debug,Info" writeTo="blackhole" final="true" />
        <logger name="Quartz.Impl*" levels="Debug,Info" writeTo="blackhole" final="true" />
        <logger name="Quartz.Core*" levels="Debug,Info" writeTo="blackhole" final="true" />
        
        <logger name="IJob" writeTo="jsonJobLoggerAWS, jsonJobLoggerConsole" final="true"/>
        <logger name="PTV.TaskScheduler.QuartzScheduler" minlevel="Trace" writeTo="jsonJobLoggerAWS, jsonJobLoggerConsole" final="true"/>
        <logger name="SoteService" writeTo="jsonJobLoggerAWS, jsonJobLoggerConsole" final="true"/>
        <logger name="AccessibilityRegisterService" writeTo="jsonJobLoggerAWS, jsonJobLoggerConsole" final="true"/>
        <logger name="EmailService" writeTo="jsonJobLoggerAWS, jsonJobLoggerConsole" final="true"/>
        <logger name="OldArchiveProcessingService" writeTo="jsonJobLoggerAWS, jsonJobLoggerConsole" final="true"/>
        <logger name="NotificationService" writeTo="jsonJobLoggerAWS, jsonJobLoggerConsole" final="true"/>
        <logger name="MassService" writeTo="jsonJobLoggerAWS, jsonJobLoggerConsole" final="true"/>
        <logger name="TasksService" writeTo="jsonJobLoggerAWS, jsonJobLoggerConsole" final="true"/>        
        
        <logger name="*" levels="Error, Warn" writeTo="jsonJobLoggerAWS, jsonJobLoggerConsole" />

    </rules>
</nlog>